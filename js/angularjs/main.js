// Generated by CoffeeScript 1.3.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.MainCtrl = [
    '$scope', '$location', '$modal', function(self, $location, $modal) {
      self.tab = $location.path().replace(/\//, '');
      self.$watch('incident.well_number', function(well_name) {
        var key, well, _i, _len, _ref, _results;
        if ((well = _.find(self.well_numbers, {
          name: well_name
        }))) {
          _ref = ['state', 'region', 'office'];
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            key = _ref[_i];
            _results.push(self.incident[key] = well[key]);
          }
          return _results;
        }
      });
      self.$watch('incident', function(incident) {
        return localStorage['incident'] = JSON.stringify(incident);
      }, true);
      self.toggle_severity = function(severity) {
        if (__indexOf.call(self.incident.severities, severity) >= 0) {
          return self.incident.severities = _.without(self.incident.severities, severity);
        } else {
          return self.incident.severities.push(severity);
        }
      };
      self.addAction = function() {
        return $modal.open({
          templateUrl: 'templates/add_action.html',
          controller: 'AddActionCtrl',
          resolve: {
            action: function() {
              return {
                description: '',
                name: '',
                company: '',
                date: ''
              };
            }
          }
        }).result.then(function(action) {
          if (action) {
            return self.incident.actions.push(action);
          }
        });
      };
      self.editAction = function(action) {
        return $modal.open({
          templateUrl: 'templates/add_action.html',
          controller: 'AddActionCtrl',
          resolve: {
            action: function() {
              return action;
            }
          }
        }).result.then(function(_action) {
          if (_action) {
            return action = _.extend(action, _action);
          }
        });
      };
      self.removeAction = function(action) {
        return self.incident.actions = _.reject(self.incident.actions, action);
      };
      return self.submit = function() {
        return window.open('#/results');
      };
    }
  ];

}).call(this);
